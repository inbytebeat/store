<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace属性 用于指定当前的映射文件和当前那个接口进行映射 需要标注包的全路径-->
<mapper namespace="com.cy.store.mapper.UserMapper">

    <!--自定义映射规则
        id属性:表示该映射规则的id值
        type属性:表示的是 数据库中查询的结果与哪一个实体类进行结果集的映射
        column表示字段名称 property表示属性名称
    -->
    <resultMap id="userEntityMap" type="com.cy.store.entity.User">
        <!--在定义映射规则时，主键是不可以省略的-->
        <id property="uid" column="uid" />
        <result property="isDelete" column="is_delete" />
        <result property="password" column="password" />
        <result property="createdUser" column="created_user" />
        <result property="createdTime" column="created_time" />
        <result property="modifiedUser" column="modified_user" />
        <result property="modifiedTime" column="modified_time" />
    </resultMap>

    <!--开启某个字段的自增，并告诉该自增属性是是uid-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        insert into t_user
        (username, password, salt, phone, email, gender, avatar, is_delete, created_user,
         created_time, modified_user, modified_time)
        values (#{username}, #{password}, #{salt}, #{phone}, #{email},
                #{gender}, #{avatar}, #{isDelete}, #{createdUser},
                #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <!--select语句在执行时 查询结果无非是一个对象或者多个对象，我们如果保存这个查询结果呢
    可以使用resultType属性来指定
        resultType：表示当前查询的结果集类型，只需要指定对应映射类的类型，并且包含完整接口
    可以使用resultMap标签
        resultMap:当数据库中的表的字段与实体类的属性名不一致时，可以来自定义映射规则，比如id_delete就表示isDelete
-->

    <select id="findByUserName" resultMap="userEntityMap">
        select * from t_user where username = #{username};
    </select>

    <select id="findUserByUid" resultMap="userEntityMap">
        select * from t_user where uid = #{uid};
    </select>

    <update id="changePassword" >
        update t_user set password = #{password},modified_user = #{modifiedUser},modified_time = #{modifiedTime} where uid = #{uid};
    </update>

    <update id="updateInfoByUid">
        update t_user
        <set>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            modified_time = #{modifiedTime},modified_user = #{modifiedUser}
        </set>
        where uid = #{uid};


    </update>
    <update id="updateAvatarByUidInteger">
        update t_user
        set avatar = #{avatar},modified_user = #{modifiedUser},modified_time = #{modifiedTime}
        where uid = #{uid};
    </update>


</mapper>